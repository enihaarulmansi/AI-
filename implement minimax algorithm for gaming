def minimax(board, depth, is_maximizing):
    score = evaluate(board)

    if score == 10:
        return score - depth
    if score == -10:
        return score + depth
    if is_board_full(board):
        return 0

    if is_maximizing:
        best_score = float('-inf')
        for move in get_possible_moves(board):
            board[move] = 'X' 
            best_score = max(best_score, minimax(board, depth + 1, False))
            board[move] = ' '  
        return best_score
    else:
        best_score = float('inf')
        for move in get_possible_moves(board):
            board[move] = 'O'  
            best_score = min(best_score, minimax(board, depth + 1, True))
            board[move] = ' '  
        return best_score


